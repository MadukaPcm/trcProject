# Generated by Django 3.2.18 on 2023-04-18 03:11

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('serviceName', models.CharField(blank=True, max_length=100, null=True)),
                ('time_schedule', models.IntegerField(default=0)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='Locomotive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('locomotiveNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('goingRootNo', models.IntegerField(default=0)),
                ('returningRootNo', models.IntegerField(default=0)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='LocomotiveType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('typeL', models.CharField(blank=True, max_length=100, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='RootType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('rootName', models.CharField(blank=True, max_length=100, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('workshopName', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('task', models.CharField(blank=True, max_length=100, null=True)),
                ('taskDescription', models.TextField(blank=True, max_length=100, null=True)),
                ('timeSTD', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=20)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('service_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servicecS_class', to='testapp.classservice')),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='ReportFault',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('fault', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('faultDate', models.DateField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('workshop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WorkshopRpt', to='testapp.workshop')),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='PassLocomotive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('rootDate', models.DateTimeField()),
                ('arrivalStatus', models.CharField(blank=True, max_length=200)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('locomotive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locomotiveA', to='testapp.locomotive')),
                ('root', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rootT', to='testapp.roottype')),
                ('workshop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WorkshopA', to='testapp.workshop')),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.CreateModel(
            name='LocomotiveClass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('className', models.CharField(blank=True, max_length=100, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('locomotive_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locomotiveL_type', to='testapp.locomotivetype')),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
        migrations.AddField(
            model_name='locomotive',
            name='classL',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locom_class', to='testapp.locomotiveclass'),
        ),
        migrations.AddField(
            model_name='classservice',
            name='class_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classs_type', to='testapp.locomotiveclass'),
        ),
        migrations.AddField(
            model_name='classservice',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servicec_type', to='testapp.servicetype'),
        ),
        migrations.CreateModel(
            name='BreakDownM',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('fault', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('faultDate', models.DateField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('locomotive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locom', to='testapp.locomotive')),
                ('workshop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WorkshopBd', to='testapp.workshop')),
            ],
            options={
                'ordering': ['-createdAt', '-updatedAt'],
            },
        ),
    ]
